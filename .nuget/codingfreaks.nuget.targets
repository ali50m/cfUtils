<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ExtensionTasksPath>$(SolutionDir)packages\MSBuild.Extension.Pack.1.9.0\tools\net40</ExtensionTasksPath>
    <NugetReleaseName>ReleaseNuget</NugetReleaseName>
  </PropertyGroup>
  <Import Project="$(SolutionDir).nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Import Project="$(ExtensionTasksPath)\MSBuild.ExtensionPack.VersionNumber.targets" Condition="Exists('$(ExtensionTasksPath)\MSBuild.ExtensionPack.VersionNumber.targets')" />
  <UsingTask TaskName="GetVersionParts" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <AssemblyPath ParameterType="System.String" Required="true" />
      <MajorVersion ParameterType="System.Int32" Output="true" />
      <MinorVersion ParameterType="System.Int32" Output="true" />
      <BuildVersion ParameterType="System.Int32" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.Diagnostics" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
            Log.LogMessage("Getting version details of assembly at: " + this.AssemblyPath, MessageImportance.High);
            Version v = Version.Parse(FileVersionInfo.GetVersionInfo(this.AssemblyPath).FileVersion);
            this.MajorVersion = v.Major;
            this.MinorVersion = v.Minor;
            this.BuildVersion = v.Build;
        ]]>
      </Code>
    </Task>
  </UsingTask>
  <ItemGroup>
    <ApiKeyFile Include="$(SolutionDir).nuget\apikey.txt"/>
  </ItemGroup>
  <Target Name="ReadFromFile">
    <Message Text="API key file: @(ApiKeyFile)" Importance="Low" />
    <ReadLinesFromFile File="@(ApiKeyFile)" >
      <Output
          TaskParameter="Lines"
          ItemName="NuGetApiKey"/>
    </ReadLinesFromFile>
  </Target>
  <Target Name="cfRetrieveVersion">
    <Message Text="Retrieving version for $(ProjectDir)$(OutputPath)$(TargetFileName)." Importance="High" />
    <GetVersionParts AssemblyPath="$(ProjectDir)$(OutputPath)$(TargetFileName)">
      <Output TaskParameter="MajorVersion" PropertyName="MajorVersionNumber" />
      <Output TaskParameter="MinorVersion" PropertyName="MinorVersionNumber" />
      <Output TaskParameter="BuildVersion" PropertyName="BuildVersionNumber" />
    </GetVersionParts>
    <Message Text="Build: $(BuildVersionNumber)" Importance="High" />
  </Target>
  <Target Name="cfUpgradeVersion">
    <Message Text="Extension path: $(ExtensionTasksPath)" Importance="Low" />
    <Message Text="Upgrading version including build." Importance="High" Condition="'$(Configuration)' == '$(NugetReleaseName)'" />
    <Message Text="Upgrading version excluding build." Importance="High" Condition="'$(Configuration)' != '$(NugetReleaseName)'" />        
    <AssemblyInfo Condition="'$(Configuration)' == '$(NugetReleaseName)'" AssemblyInfoFiles="@(AssemblyInfoFiles)" AssemblyBuildNumberType="AutoIncrement" AssemblyRevisionType="AutoIncrement" AssemblyFileBuildNumberType="AutoIncrement" AssemblyFileRevisionType="AutoIncrement" />
    <AssemblyInfo Condition="'$(Configuration)' != '$(NugetReleaseName)'" AssemblyInfoFiles="@(AssemblyInfoFiles)" AssemblyBuildNumberType="NoIncrement" AssemblyRevisionType="AutoIncrement" AssemblyFileBuildNumberType="NoIncrement" AssemblyFileRevisionType="AutoIncrement" />
  </Target>
  <Target Name="cfNugetPackage" Condition="'$(Configuration)' == '$(NugetReleaseName)'" DependsOnTargets="cfRetrieveVersion;ReadFromFile">
    <PropertyGroup>
      <NuSpecPath>$(ProjectDir)$(ProjectName).nuspec</NuSpecPath>
      <NuGetVersion>$(MajorVersionNumber).$(MinorVersionNumber).$(BuildVersionNumber)</NuGetVersion>
      <NuGetPackage>$(ProjectDir)$(NuGetPraefix)$(AssemblyName).$(MajorVersionNumber).$(MinorVersionNumber).$(BuildVersionNumber).nupkg</NuGetPackage>      
      <NuGetPushCommand>"$(NugetToolsPath)\NuGet.exe" push "$(NuGetPackage)" -apikey "@(NuGetApiKey)"</NuGetPushCommand>
    </PropertyGroup>
    <Message Text="Building Nuget Package with version $(NugetVersion)" Importance="High" Condition="Exists('$(NuSpecPath)')" />
    <Message Text="Skipping NuGet Packaging because spec was NOT found under $(NuSpecPath)" Importance="High" Condition="!Exists('$(NuSpecPath)')" />
    <Exec Command='"$(NugetToolsPath)\NuGet.exe" pack "$(NuSpecPath)" -BasePath "$(MSBuildProjectDirectory)" -Version $(NuGetVersion)' Condition="Exists('$(NuSpecPath)')" />
    <Message Text="Pushing Nuget Package $(NuGetPackage) using $(NuGetPushCommand)" Importance="High" Condition="Exists('$(NuGetPackage)')" />
    <Message Text="Skipping NuGet Pushing because packing to $(NuGetPackage) was not performed." Importance="High" Condition="!Exists('$(NuGetPackage)')" />
    <Exec Command="$(NugetPushCommand)" Condition="Exists('$(NuGetPackage)')" />
    <Delete Files="$(NuGetPackage)" Condition="Exists('$(NuGetPackage)')" />
  </Target>
</Project>